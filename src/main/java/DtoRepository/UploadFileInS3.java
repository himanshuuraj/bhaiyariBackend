package DtoRepository;

import com.amazonaws.AmazonServiceException;
import com.amazonaws.SdkClientException;
import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.s3.model.CannedAccessControlList;
import com.amazonaws.services.s3.model.ObjectMetadata;
import constants.CONSTANTS;

import java.io.*;


public class UploadFileInS3 {

    public String uploadFile(String base64Data, String fileName){
        base64Data = ",";
        fileName = "fileName";
        try {
            fileName = fileName.toLowerCase();
            //fileName = "hello/" + fileName;
            byte[] bI = org.apache.commons.codec.binary.Base64.decodeBase64((base64Data.substring(base64Data.indexOf(",") + 1)).getBytes());
            InputStream fis = new ByteArrayInputStream(bI);
            BasicAWSCredentials awsCreds = new BasicAWSCredentials(CONSTANTS.ACCESS_KEY_ID, CONSTANTS.SECRET_KEY_ID);
            AmazonS3 s3 = AmazonS3ClientBuilder.standard()
                    .withRegion(CONSTANTS.REGION_NAME)
                    .withCredentials(new AWSStaticCredentialsProvider(awsCreds))
                    .build();
            ObjectMetadata metadata = new ObjectMetadata();
            metadata.setContentLength(bI.length);
            //metadata.setContentType("image/png");
            metadata.setCacheControl("public, max-age=31536000");
            s3.putObject(CONSTANTS.BUCKET_NAME, fileName, fis, metadata);
            s3.setObjectAcl(CONSTANTS.BUCKET_NAME, fileName, CannedAccessControlList.PublicRead);
            return getImageUrlFromS3(fileName);
        }catch(AmazonServiceException e) {
            // The call was transmitted successfully, but Amazon S3 couldn't process
            // it, so it returned an error response.
            e.printStackTrace();
            return "amazonServiceException";
        }
        catch(SdkClientException e) {
            // Amazon S3 couldn't be contacted for a response, or the client
            // couldn't parse the response from Amazon S3.
            e.printStackTrace();
            return "sdkClientException";
        }
    }

    public String getImageUrlFromS3(String fileName){
//      // https://s3-[yourRegion].amazonaws.com/[yourBucket]/[yourCollectionName]/[yourFolderName]/[yourKeyName];
        String str = "https://s3-" + CONSTANTS.REGION_NAME + ".amazonaws.com/" + CONSTANTS.BUCKET_NAME + "/" + fileName;
        return str;
    }

    public String createDirectoryInS3(String fileName){

        return "directoryName";
    }
}
